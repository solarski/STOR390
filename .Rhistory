install.packages('tidyverse')
install.packages('rtweet')
install.packages('rvest')
install.packages('shiny')
runExample("01_hello")
if (!require('shiny')) install.packages("shiny")
runExample("01_hello")
library(shiny)
color_list <- list(red = c("tomato", "violetred", "firebrick"),
green = c("chartreuse", "forestgreen", "olivedrab"),
blue = c("navy", "dodgerblue", "torquoise"))
ui <- fluidPage(
radioButtons(inputId = "color_family",
label = "Choose a color family",
choices = c("red", "green", "blue")),
uiOutput(outputId = "color_selector"),
verbatimTextOutput(outputId = "color_chosen")
)
server <- function(input, output) {
output$color_selector <- renderUI({
selectInput(inputId = "color",
label = "Select color",
choices = color_list[input$color_family])
})
output$color_chosen <- renderText({
paste("You chose this color:", input$color)
})
}
shinyApp(ui = ui, server = server,
options = list(height = 300))
library(rvest)
library(stringr)
library(rvest)
library(stringr)
library(tidyverse)
nyt_url <- "https://www.nytimes.com/"
html <- read_html(nyt_url)
selector <- ".story-heading"
# some code to get articles titles
article_titles <- html_nodes(selector) %>% html_text()
article_titles <- html %>% html_nodes(selector) %>% html_text()
article_titles[1:10]
install.packages('rtweet')
consumer_key <- "00eRwXAofHfOi3VLoMpqle73k"
consumer_secret <- "Nkm0CGxjtgwFuwYO3BpVTpFS8WaltzG7iEzvydrLYEzyfv2qSu"
appname <- 'stor390scraper'
twitter_token <- create_token(app = appname,
consumer_key = consumer_key,
consumer_secret = consumer_secret)
library(rtweet)
consumer_key <- "00eRwXAofHfOi3VLoMpqle73k"
consumer_secret <- "Nkm0CGxjtgwFuwYO3BpVTpFS8WaltzG7iEzvydrLYEzyfv2qSu"
appname <- 'stor390scraper'
twitter_token <- create_token(app = appname,
consumer_key = consumer_key,
consumer_secret = consumer_secret)
consumer_key <- "00eRwXAofHfOi3VLoMpqle73k"
consumer_secret <- "Nkm0CGxjtgwFuwYO3BpVTpFS8WaltzG7iEzvydrLYEzyfv2qSu"
appname <- 'stor390scraper'
twitter_token <- create_token(app = appname,
consumer_key = consumer_key,
consumer_secret = consumer_secret)
handle <- "hadleywickham"
search_results <- get_timeline(handle)$text[1:100]
search_results[1]
search_results[2]
str_count(search_results, "data")
str_detect(search_results, "data")
consumer_key <- "00eRwXAofHfOi3VLoMpqle73k"
consumer_secret <- "Nkm0CGxjtgwFuwYO3BpVTpFS8WaltzG7iEzvydrLYEzyfv2qSu"
appname <- 'stor390scraper'
twitter_token <- create_token(app = appname,
consumer_key = consumer_key,
consumer_secret = consumer_secret)
handle <- "hadleywickham"
search_results <- get_timeline(handle)$text[1:100]
search_query <- "data"
count <- sum(str_detect(search_results, search_query))
count
str_count("data data", "data")
consumer_key <- "00eRwXAofHfOi3VLoMpqle73k"
consumer_secret <- "Nkm0CGxjtgwFuwYO3BpVTpFS8WaltzG7iEzvydrLYEzyfv2qSu"
appname <- 'stor390scraper'
twitter_token <- create_token(app = appname,
consumer_key = consumer_key,
consumer_secret = consumer_secret)
handle <- "hadleywickham"
search_results <- get_timeline(handle)$text[1:100]
search_query <- "(d|D)ata"
count <- sum(str_detect(search_results, search_query))
count
setwd("~/R/STOR390/Project")
file_name <- 'Batting.csv'
data <- read_csv(file_name)
library(tidyverse)
file_name <- 'Batting.csv'
data <- read_csv(file_name)
View(data)
data <- date %>% mutate(bat_avg = H/AB)
library(diplyr)
install.packages('diplyr')
install.packages('dplyr')
library(dplyr)
library(tidyverse)
library(dplyr)
file_name <- 'Batting.csv'
data <- read_csv(file_name)
data <- date %>% mutate(bat_avg = H/AB)
data <- data %>% mutate(bat_avg = H/AB)
ggplot(data = data) +
geom_jitter(mapping = aes(x=yearID, y=))
data <- data %>% mutate(batting_avg = H/AB)
ggplot(data = data) +
geom_jitter(mapping = aes(x=yearID, y=batting_avg))
ggplot(data = data) +
geom_jitter(mapping = aes(x=yearID, y=HR))
average_homeruns <- data %>% group_by(yearID) %>% summarise(avg_hr = mean(HR))
ggplot(data = data) +
geom_line(mapping = aes(x=yearID, y=avg_hr))
average_homeruns <- data %>% group_by(yearID) %>% summarise(avg_hr = mean(HR))
ggplot(data = average_homeruns) +
geom_line(mapping = aes(x=yearID, y=avg_hr))
lm(avg_hr ~ yearID, average_homeruns)
lin_reg <- lm(avg_hr ~ yearID, average_homeruns)
summary(lin_reg)
ggplot(data = average_homeruns) +
geom_line(mapping = aes(x=yearID, y=avg_hr)) +
stat_smooth(method = "lm", col = "red")
ggplot(data = average_homeruns, mapping = aes(x=yearID, y=avg_hr)) +
geom_line() +
stat_smooth(method = "lm", col = "red")
setwd("~/R/STOR390/project_repo")
data <- data %>% mutate(batting_avg = H/AB)
ggplot(data = data) +
geom_jitter(mapping = aes(x=yearID, y=HR))
average_homeruns <- data %>% group_by(yearID) %>% summarise(avg_hr = mean(HR))
lin_reg <- lm(avg_hr ~ yearID, average_homeruns)
summary(lin_reg)
ggplot(data = average_homeruns, mapping = aes(x=yearID, y=avg_hr)) +
geom_line() +
stat_smooth(method = "lm", col = "red")
View(data)
data <- data %>% group_by(yearID) %>% summarise(avg_hr = mean(HR), max_hr = max(HR))
ggplot(data = data) +
geom_line(mapping = aes(x=yearID, y=avg_hr)) +
geom_line(mapping = aes(x=yearID, y=max_hr)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=avg_hr))
data <- data %>% mutate(batting_avg = H/AB)
data <- data %>% mutate(batting_avg = H/AB)
data <- read_csv(file_name)
data <- data %>% mutate(batting_avg = H/AB)
ggplot(data = data) +
geom_jitter(mapping = aes(x=yearID, y=HR))
sum_data <- data %>% group_by(yearID) %>% summarise(avg_hr = mean(HR), max_hr = max(HR))
lin_reg <- lm(avg_hr ~ yearID, average_homeruns)
summary(lin_reg)
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=avg_hr)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=avg_hr))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=max_hr))
ggplot(data = data) +
geom_jitter(mapping = aes(x=yearID, y=HR))
sum_data <- data %>% group_by(yearID) %>% summarise(avg_sb = mean(SB), max_sb = max(SB))
lin_reg <- lm(avg_hr ~ yearID, average_homeruns)
summary(lin_reg)
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=avg_sb)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=avg_sb))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=max_sb))
View(data)
data <- data %>% mutate(`1B` = `H` - `2B` - `3B` - `HR`)
data <- data %>% mutate(`1B` = `H` - `2B` - `3B` - `HR`,
slugging_avg = (1B + 2B*2 + 3B*3 + HR*4)/AB)
data <- data %>% mutate(`1B` = `H` - `2B` - `3B` - `HR`,
slugging_avg = (`1B` + `2B`*2 + `3B`*3 + `HR`*4)/`AB`)
sum_data <- data %>% group_by(yearID) %>% summarise(base_avg_avg = mean(base_avg))
data <- data %>% mutate(`1B` = `H` - `2B` - `3B` - `HR`,
slugging_avg = (`1B` + `2B`*2 + `3B`*3 + `HR`*4)/`AB`,
base_avg = (`1B` + `2B`*2 + `3B`*3 + `HR`*4)/`AB`)
sum_data <- data %>% group_by(yearID) %>% summarise(base_avg_avg = mean(base_avg))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=base_avg_avg)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=base_avg_avg))
sum_data <- data %>% group_by(yearID) %>% summarise(base_avg_avg = mean(base_avg, na.rm=TRUE))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=base_avg_avg)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=base_avg_avg))
sum_data <- data %>% group_by(yearID) %>% summarise(base_avg_avg = mean(base_avg, na.rm=TRUE),
slug_avg_avg = mean(slugging_avg, na.rm=TRUE))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=slug_avg_avg)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=slug_avg_avg))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=base_avg_avg)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=base_avg_avg))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=slug_avg_avg)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=slug_avg_avg))
data <- data %>% mutate(`1B` = `H` - `2B` - `3B` - `HR`,
slugging_avg = (`1B` + `2B`*2 + `3B`*3 + `HR`*4)/`AB`,
base_avg = (`1B` + `2B`*2 + `3B`*3 + `HR`*4))
sum_data <- data %>% group_by(yearID) %>% summarise(base_avg_avg = mean(base_avg, na.rm=TRUE),
slug_avg_avg = mean(slugging_avg, na.rm=TRUE))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=slug_avg_avg)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=slug_avg_avg))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=base_avg_avg)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=base_avg_avg))
sum_data <- data %>% group_by(yearID) %>% summarise(avg_hr = mean(HR), max_hr = max(HR))
lin_reg <- lm(avg_hr ~ yearID, average_homeruns)
summary(lin_reg)
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=avg_hr)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=avg_hr))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=max_hr))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=avg_hr)) +
facet_wrap(~ lgID) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=avg_hr))
sum_data <- data %>% group_by(yearID) %>% summarise(avg_sal = mean(salary), max_sal = max(salary))
file_name <- 'Salaries.csv'
data <- read_csv(file_name)
sum_data <- data %>% group_by(yearID) %>% summarise(avg_sal = mean(salary), max_sal = max(salary))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=avg_sal)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=avg_sal))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=max_sal))
ggplot(data = data) +
geom_jitter(mapping = aes(x=yearID, y=batting_avg))
data <- data %>% mutate(batting_avg = H/AB)
data <- read_csv(file_name)
data <- data %>% mutate(batting_avg = H/AB)
ggplot(data = data) +
geom_jitter(mapping = aes(x=yearID, y=batting_avg))
data <- data %>% mutate(batting_avg = H/AB)
data <- data %>% mutate(batting_avg = `H`/`AB`)
file_name <- 'Batting.csv'
data <- read_csv(file_name)
data <- data %>% mutate(batting_avg = `H`/`AB`)
ggplot(data = data) +
geom_jitter(mapping = aes(x=yearID, y=batting_avg))
batting_data <- read_csv(file_name)
batting_data <- batting_data %>% mutate(`1B` = `H` - `2B` - `3B`
batting_data <- batting_data %>% mutate(batting_avg = `H`/`AB`)
batting_data <- batting_data %>% mutate(batting_avg = `H`/`AB`)
?join
bat_sal_data <- inner_join(batting_data, sal_data, copy=TRUE)
file_name <- 'Salaries.csv'
sal_data <- read_csv(file_name)
bat_sal_data <- inner_join(batting_data, sal_data, copy=TRUE)
ggplot(data = bat_sal_data) +
geom_jitter(aes(x=batting_avg, y=salary))
library(tidyverse)
library(dplyr)
file_name <- 'Batting.csv'
batting_data <- read_csv(file_name)
batting_data <- batting_data %>% mutate(batting_avg = `H`/`AB`)
batting_data <- batting_data %>% mutate(`1B` = `H` - `2B` - `3B` - `HR`,
slugging_avg = (`1B` + `2B`*2 + `3B`*3 + `HR`*4)/`AB`,
base_avg = (`1B` + `2B`*2 + `3B`*3 + `HR`*4))
ggplot(data = batting_data) +
geom_jitter(mapping = aes(x=yearID, y=batting_avg))
sum_data <- batting_data %>% group_by(yearID) %>% summarise(avg_hr = mean(HR), max_hr = max(HR))
lin_reg <- lm(avg_hr ~ yearID, average_homeruns)
summary(lin_reg)
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=avg_hr)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=avg_hr))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=max_hr))
sum_data <- batting_data %>% group_by(yearID) %>% summarise(avg_sb = mean(SB))
lin_reg <- lm(avg_hr ~ yearID, average_homeruns)
summary(lin_reg)
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=avg_sb)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=avg_sb))
sum_data <- batting_data %>% group_by(yearID) %>% summarise(base_avg_avg = mean(base_avg, na.rm=TRUE),
slug_avg_avg = mean(slugging_avg, na.rm=TRUE))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=base_avg_avg)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=base_avg_avg))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=slug_avg_avg)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=slug_avg_avg))
file_name <- 'Salaries.csv'
sal_data <- read_csv(file_name)
sum_data <- data %>% group_by(yearID) %>% summarise(avg_sal = mean(salary), max_sal = max(salary))
sum_data <- sal_data %>% group_by(yearID) %>% summarise(avg_sal = mean(salary), max_sal = max(salary))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=avg_sal)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=avg_sal))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=max_sal))
bat_sal_data <- inner_join(batting_data, sal_data, copy=TRUE)
ggplot(data = bat_sal_data) +
geom_jitter(aes(x=batting_avg, y=salary))
library(tidyverse)
library(dplyr)
file_name <- 'Batting.csv'
batting_data <- read_csv(file_name)
batting_data <- batting_data %>% mutate(batting_avg = `H`/`AB`)
batting_data <- batting_data %>% mutate(`1B` = `H` - `2B` - `3B` - `HR`,
slugging_avg = (`1B` + `2B`*2 + `3B`*3 + `HR`*4)/`AB`,
base_avg = (`1B` + `2B`*2 + `3B`*3 + `HR`*4))
ggplot(data = batting_data) +
geom_jitter(mapping = aes(x=yearID, y=batting_avg))
sum_data <- batting_data %>% group_by(yearID) %>% summarise(avg_hr = mean(HR), max_hr = max(HR))
lin_reg <- lm(avg_hr ~ yearID, average_homeruns)
summary(lin_reg)
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=avg_hr)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=avg_hr))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=max_hr))
sum_data <- batting_data %>% group_by(yearID) %>% summarise(avg_sb = mean(SB))
lin_reg <- lm(avg_hr ~ yearID, average_homeruns)
summary(lin_reg)
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=avg_sb)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=avg_sb))
sum_data <- batting_data %>% group_by(yearID) %>% summarise(base_avg_avg = mean(base_avg, na.rm=TRUE),
slug_avg_avg = mean(slugging_avg, na.rm=TRUE))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=base_avg_avg)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=base_avg_avg))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=slug_avg_avg)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=slug_avg_avg))
file_name <- 'Salaries.csv'
sal_data <- read_csv(file_name)
sum_data <- sal_data %>% group_by(yearID) %>% summarise(avg_sal = mean(salary), max_sal = max(salary))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=avg_sal)) +
stat_smooth(method = "lm", col = "red", mapping = aes(x=yearID, y=avg_sal))
ggplot(data = sum_data) +
geom_line(mapping = aes(x=yearID, y=max_sal))
bat_sal_data <- inner_join(batting_data, sal_data, copy=TRUE)
ggplot(data = bat_sal_data) +
geom_jitter(aes(x=batting_avg, y=salary))
